"""empty message

Revision ID: 24eb518016bb
Revises: 402a0c87fe84
Create Date: 2025-10-29 10:15:15.647412

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '24eb518016bb'
down_revision = '402a0c87fe84'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories_table',
    sa.Column('categories_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('categories_id'),
    sa.UniqueConstraint('name'),
    schema='categories'
    )
    op.create_table('order_table',
    sa.Column('order_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('payment_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.payment_table.payment_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.users_table.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('order_id'),
    schema='orders'
    )
    op.create_table('payment_table',
    sa.Column('payment_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.BigInteger(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('reference', sa.String(length=150), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_table.order_id'], ),
    sa.PrimaryKeyConstraint('payment_id'),
    sa.UniqueConstraint('reference'),
    schema='payment'
    )
    op.create_table('users_table',
    sa.Column('user_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('first_name', sa.String(length=150), nullable=True),
    sa.Column('middle_name', sa.String(length=150), nullable=True),
    sa.Column('last_name', sa.String(length=150), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('country', sa.String(length=150), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_code', sa.String(length=10), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('reset_code', sa.String(length=10), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='users'
    )
    op.create_table('carts',
    sa.Column('cart_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.users_table.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('cart_id'),
    schema='cart'
    )
    op.create_table('products_table',
    sa.Column('product_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=True),
    sa.Column('categories_id', sa.BigInteger(), nullable=True),
    sa.Column('brand', sa.String(length=100), nullable=True),
    sa.Column('size', sa.String(length=50), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['categories_id'], ['categories.categories_table.categories_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('product_id'),
    schema='products'
    )
    op.create_table('cart_items',
    sa.Column('cart_item_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_at_time', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.carts.cart_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.products_table.product_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.users_table.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('cart_item_id'),
    sa.UniqueConstraint('user_id', 'product_id', name='unique_user_product'),
    schema='cart'
    )
    op.drop_table('cart_items')
    op.drop_table('order_table')
    op.drop_table('products_table')
    op.drop_table('users_table')
    op.drop_table('payment_table')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_table',
    sa.Column('payment_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order_table.order_id'], name=op.f('payment_table_order_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.user_id'], name=op.f('payment_table_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id', name=op.f('payment_table_pkey'))
    )
    op.create_table('users_table',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_table_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('middle_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('verification_code', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_table_pkey'),
    sa.UniqueConstraint('email', name='users_table_email_key'),
    sa.UniqueConstraint('username', name='users_table_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products_table',
    sa.Column('product_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('size', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('product_id', name=op.f('products_table_pkey'))
    )
    op.create_table('order_table',
    sa.Column('order_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('shipping_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.user_id'], name=op.f('order_table_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('order_id', name=op.f('order_table_pkey'))
    )
    op.create_table('cart_items',
    sa.Column('cart_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.user_id'], name=op.f('cart_items_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('cart_id', name=op.f('cart_items_pkey'))
    )
    op.drop_table('cart_items', schema='cart')
    op.drop_table('products_table', schema='products')
    op.drop_table('carts', schema='cart')
    op.drop_table('users_table', schema='users')
    op.drop_table('payment_table', schema='payment')
    op.drop_table('order_table', schema='orders')
    op.drop_table('categories_table', schema='categories')
    # ### end Alembic commands ###
